// Model for for standing genetic variation, multiple TSRs, neutral, no selection
// Default: Wright-Fisher model

// Length of genomic element, ACCase gene with 7 TSR positions
// Mutation rate: Arabidopsis (Ossowski et al. 2010); Recombination rate: Maize (Bauer et al. 2013)
initialize() {
	// For cluster runs: Loop through different RUNIDs; For SLiMgui: Remove the // before defineConstant("RUNID",1)
	//defineConstant("RUNID",1);
	defineConstant("L", 12250);
	defineConstant("Ile1781", 10467);
	defineConstant("Trp1999", 11121);
	defineConstant("Trp2027", 11205);
	defineConstant("Ile2041", 11247);
	defineConstant("Asp2078", 11358);
	defineConstant("Cys2088", 11388);
	defineConstant("Gly2096", 11412);
	initializeMutationRate(7.1e-9);
	// m1 and m2 mutation type: neutral, 0.5 = dominance coefficient, 0.0 = selection coefficient
	initializeMutationType("m1", 0.5, "f", 0.0);
	m1.convertToSubstitution = F;
	initializeMutationType("m2", 0.5, "f", 0.0);
	m2.convertToSubstitution = F;
	m2.color = "red";
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, L);
	initializeRecombinationRate(7.4e-9); 
}

1 { // save this run's identifier, used to save and restore
	defineConstant("simID", getSeed());
	sim.addSubpop("p1", 180000);}


300000 late () {sim.outputFull("/tmp/slim_" + RUNID + "_" + simID + ".txt");}


309999: late () {
	muts=sim.mutations;
	targetloci=muts.position[sim.mutations.position == Ile1781 | sim.mutations.position == Trp1999 | sim.mutations.position == Trp2027 | sim.mutations.position == Ile2041 | sim.mutations.position == Asp2078 | sim.mutations.position == Cys2088 | sim.mutations.position == Gly2096];
	if (size(targetloci) > 0)
	{cat("TARGET MUTATION - ABUNDANT\n");
		sim.deregisterScriptBlock(self);}
	else {cat("TARGET MUTATION - NO OCCURENCE\n");
		sim.readFromPopulationFile("/tmp/slim_" + RUNID + "_" + simID + ".txt");
		// start a newly seeded run
		setSeed(rdunif(1, 0, asInteger(2^62) - 1));}}

// Output before start of herbicide treatment of all haplotypes (here neutral, no treatment)
310000 early(){ sim.outputFull("/tmp/slim_" + "Run" + RUNID + "_pre_full_standing_neutral.txt");}

310000 early(){ p1.outputVCFSample(24, filePath = "/tmp/slim_" + "Run" + RUNID + "_00_standing_neutral.vcf");}


// Output mutations and mutation frequencies, no selection
310000:310020 early () {muts=sim.mutations;
	mut=sim.mutations[muts.position == Ile1781 | muts.position == Trp1999 | muts.position == Trp2027 | muts.position == Ile2041 | muts.position == Asp2078 | muts.position == Cys2088 | muts.position == Gly2096];
	mut.setMutationType(m2);}

310000:310020 late(){ sim.outputMutations(sim.mutationsOfType(m2));}

// Gen 5 
310005 late() { p1.outputVCFSample(24, filePath = "/tmp/slim_" + "Run" + RUNID + "_05_standing_neutral.vcf"); }

// Gen 10
310010 late() { p1.outputVCFSample(24, filePath = "/tmp/slim_" + "Run" + RUNID + "_10_standing_neutral.vcf"); }

// Gen 15
310015 late() { p1.outputVCFSample(24, filePath = "/tmp/slim_" + "Run" + RUNID + "_15_standing_neutral.vcf"); }

// Gen 20
310020 late() { p1.outputVCFSample(24, filePath = "/tmp/slim_" + "Run" + RUNID + "_20_standing_neutral.vcf"); }

// colouring observed mutation m2 at the end of each generation
late() {
	for (ind in sim.subpopulations.individuals)
	{resist = ind.countOfMutationsOfType(m2);
		ind.color = resist ? "red" else "yellow";}}

//310020 output haplotypes and allele frequences of individuals with m2
310020 late() { sim.outputFull("/tmp/slim_" + RUNID + "_after_full_standing_neutral.txt"); } 

// Literature:

// Ossowski, Stephan, Korbinian Schneeberger, José Ignacio Lucas-Lledó, Norman Warthmann, Richard M. Clark, Ruth G. Shaw, Detlef Weigel, and Michael Lynch. 2010. “The Rate and Molecular Spectrum of Spontaneous Mutations in Arabidopsis Thaliana.” Science 327 (5961): 92–94.

// Bauer, Eva, Matthieu Falque, Hildrun Walter, Cyril Bauland, Christian Camisan, Laura Campo, Nina Meyer, et al. 2013. “Intraspecific Variation of Recombination Rate in Maize.” Genome Biology 14 (9): R103.


